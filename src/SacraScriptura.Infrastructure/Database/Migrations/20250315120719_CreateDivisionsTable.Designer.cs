// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SacraScriptura.Infrastructure.Database;

#nullable disable

namespace SacraScriptura.Infrastructure.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250315120719_CreateDivisionsTable")]
    partial class CreateDivisionsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SacraScriptura.Domain.Bibles.Bible", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("id")
                        .UseCollation("C");

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LanguageCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("language_code")
                        .UseCollation("C");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(true)
                        .HasColumnType("character varying(63)")
                        .HasColumnName("name");

                    b.Property<string>("PublisherName")
                        .HasMaxLength(63)
                        .IsUnicode(true)
                        .HasColumnType("character varying(63)")
                        .HasColumnName("publisher_name");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(true)
                        .HasColumnType("character varying(63)")
                        .HasColumnName("version");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Version")
                        .IsUnique();

                    b.ToTable("bibles", (string)null);
                });

            modelBuilder.Entity("SacraScriptura.Domain.Books.Book", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("id")
                        .UseCollation("C");

                    b.Property<string>("BibleId")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("bible_id")
                        .UseCollation("C");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(63)
                        .IsUnicode(true)
                        .HasColumnType("character varying(63)")
                        .HasColumnName("name");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("short_name");

                    b.HasKey("Id");

                    b.HasIndex("BibleId", "Name")
                        .IsUnique();

                    b.HasIndex("BibleId", "Position")
                        .IsUnique();

                    b.ToTable("books", (string)null);
                });

            modelBuilder.Entity("SacraScriptura.Domain.Divisions.Division", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("id")
                        .UseCollation("C");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("book_id")
                        .UseCollation("C");

                    b.Property<int>("Depth")
                        .HasColumnType("integer")
                        .HasColumnName("depth");

                    b.Property<int>("LeftValue")
                        .HasColumnType("integer")
                        .HasColumnName("left_value");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("ParentId")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)")
                        .HasColumnName("parent_id")
                        .UseCollation("C");

                    b.Property<int>("RightValue")
                        .HasColumnType("integer")
                        .HasColumnName("right_value");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("BookId", "Depth");

                    b.HasIndex("BookId", "LeftValue");

                    b.HasIndex("BookId", "RightValue");

                    b.ToTable("divisions", (string)null);
                });

            modelBuilder.Entity("SacraScriptura.Domain.Books.Book", b =>
                {
                    b.HasOne("SacraScriptura.Domain.Bibles.Bible", null)
                        .WithMany()
                        .HasForeignKey("BibleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SacraScriptura.Domain.Divisions.Division", b =>
                {
                    b.HasOne("SacraScriptura.Domain.Books.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SacraScriptura.Domain.Divisions.Division", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
